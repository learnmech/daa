using System;
// Abstract class Shape
abstract class Shape
{
public abstract double CalculateArea();
public abstract double CalculatePerimeter();
}
// Subclass Circle
class Circle : Shape
{
private double radius;
public Circle(double radius)
{
this.radius = radius;
}
public override double CalculateArea()
{
return Math.PI * radius * radius;
}
public override double CalculatePerimeter()
{
return 2 * Math.PI * radius;
}
}
// Subclass Triangle
class Triangle : Shape
{
private double side1, side2, side3;
public Triangle(double side1, double side2, double side3)
{
this.side1 = side1;
this.side2 = side2;
this.side3 = side3;
}
public override double CalculateArea()
{
// Heron's formula to calculate area of a triangle
double s = (side1 + side2 + side3) / 2;
return Math.Sqrt(s * (s - side1) * (s - side2) * (s - side3));
}
public override double CalculatePerimeter()
{
return side1 + side2 + side3;
}
}
class Program
{
static void Main(string[] args)
{
Circle circle = new Circle(5);
Console.WriteLine("Circle Area: " + circle.CalculateArea());
Console.WriteLine("Circle Perimeter: " + circle.CalculatePerimeter());
Triangle triangle = new Triangle(3, 4, 5);
Console.WriteLine("Triangle Area: " + triangle.CalculateArea());
Console.WriteLine("Triangle Perimeter: " + 
triangle.CalculatePerimeter());
}
}
